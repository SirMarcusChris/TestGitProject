{"name": "test_update_user_by_id_without_name_by_put", "status": "broken", "statusDetails": {"message": "KeyError: 'job'", "trace": "def test_update_user_by_id_without_name_by_put():\n    #предполагаю, что даже при отправке в теле одного из ключей, в ответ вернутся все ключи из схемы\n        body = {\n            \"name\": \"morpheus\"\n        }\n        response = httpx.put(BASE_URL + UPDATE_USER_BY_ID, json=body)\n        response_json = response.json()\n        creation_date = response_json['updatedAt'].replace(\"T\", \" \")\n        current_date = str(datetime.datetime.utcnow())\n    \n        validate(response_json, UPDATED_USER_SCHEME)\n        assert response.status_code == 200\n        assert creation_date[0:16] == current_date[0:16]\n        assert response_json['name'] == body['name']\n>       assert response_json['job'] == body['job']\nE       KeyError: 'job'\n\ntests/test_work_with_user_data.py:88: KeyError"}, "start": 1729437027046, "stop": 1729437027470, "uuid": "79224182-5061-4cc8-b036-cb2434ed4f85", "historyId": "6a6b1f5ecca0f9a9b2c5d083cfe637ce", "testCaseId": "6a6b1f5ecca0f9a9b2c5d083cfe637ce", "fullName": "tests.test_work_with_user_data#test_update_user_by_id_without_name_by_put", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_work_with_user_data"}, {"name": "host", "value": "MacBookPro.dlink"}, {"name": "thread", "value": "25717-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_work_with_user_data"}]}